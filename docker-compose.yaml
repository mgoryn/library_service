services:
  web:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
      - my_media:/files/media
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn library_service.wsgi:application --bind 0.0.0.0:8000"
    env_file:
      - .env.sample
    depends_on:
      - db
      - redis

  db:
    image: postgres:16.0-alpine3.17
    restart: always
    env_file:
      - .env.sample
    ports:
      - "5432:5432"
    volumes:
      - my_db:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"

  celery:
    build:
      context: .
    command: celery -A library_service worker --loglevel=info
    volumes:
      - ./:/app
    depends_on:
      - db
      - redis
    env_file:
      - .env.sample

  celery-beat:
    build:
      context: .
    command: celery -A library_service beat --loglevel=info
    volumes:
      - ./:/app
    depends_on:
      - db
      - redis
    env_file:
      - .env.sample

volumes:
  my_db:
  my_media:
